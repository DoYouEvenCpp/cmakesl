namespace cmake {
/** \brief The builtin executable type.
 *
 * This class is a kind of an accessor. If you create a copy of it (e.g. by
 * passing as a parameter to a function), it doesn't mean that another
 * executable with the same name and sources is going to be created. Think of
 * it as of a implicit reference to the actual executable object.
 */
class executable
{
public:
  /** @return The name of the executable.
   */
  string name();

  /** @brief Links the library to executable.
   *
   * Uses cmake::visibility::private.
   *
   * @param lib The library to be linked to.
   */
  void link_to(library lib);

  /** @brief Links the library to executable.
   *
   * @param lib The library to be linked to.
   * @param v The visibility.
   */
  void link_to(library lib, visibility v);

  /** @brief Adds dirs to the include path of the executable.
   *
   * Uses cmake::visibility::private.
   *
   * @param dirs The paths to be added to the include path.
   */
  void include_directories(list<string> dirs);

  /** @brief Adds dirs to the include path of the executable.
   *
   * @param dirs The paths to be added to the include path.
   * @param v The visibility.
   */
  void include_directories(list<string> dirs, visibility v);
};
}
