/** \brief The builtin cmake namespace.
 */
namespace cmake {

/** \brief A list of directories specifying a search path for CMake modules to
 * be loaded by the include() od find_package() before checking the default
 * modules that come with CMake.
 *
 * By default it is empty, it is intended to be set by the project.
 */
list<string> module_path;

/** \brief Checks whether scripts are run by a proper CMake version.
 *
 * \param v The minimum CMake version.
 */
void minimum_required(version v);

/** \brief A message printing function.
 *
 * Prints \p msg to the standard output stream.
 *
 * \param msg The message to be printed.
 */
void message(string msg);

/** \brief A warning printing function.
 *
 * Prints \p msg to the standard error stream. Configuration continues.
 *
 * \param msg The message to be printed.
 */
void warning(string msg);

/** \brief An error printing function.
 *
 * Prints \p msg to the standard error stream. Configuration continues, but
 * prevents generation.
 *
 * \param msg The message to be printed.
 */
void error(string msg);

/** \brief A fatal error printing function.
 *
 * Prints \p msg to the standard error stream. Configuration stops.
 *
 * \param msg The message to be printed.
 */
void fatal_error(string msg);

/** \brief CXX compiler identificator.
 */
enum cxx_compiler_id
{
  clang
};

/** \brief CXX compiler information.
 */
class cxx_compiler_info
{
  cxx_compiler_id id;
};

/** \brief CXX compiler information getter.
 *
 * \return Information about cxx compiler that cmake is running for.
 */
cxx_compiler_info get_cxx_compiler_info();

/** \brief Adds the \p exe to installation rules.
 */
void install(executable exe);

/** \brief Adds the \p lib to installation rules.
 */
void install(library lib);

/** \brief Enables testing and ctest. Should be called in the root script.
 */
void enable_ctest();

/** \brief Registers a test executable. Test name is the same as the \p exe
 * name.
 */
void add_test(executable exe);

/** \brief Describes visibility.
 *
 * Used in e.g. library::link_to() and library::include_directories().
 */
enum visibility
{
  interface,
  private,
  public
};
}
